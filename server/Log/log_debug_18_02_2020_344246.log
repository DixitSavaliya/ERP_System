socket server started on port 4000
Listening HTTP on port 3000
requested_plain_url ==>    /User/getAuthTokens
required check ------------------------->  false
getAuthTokens login  sql ---------------------> 
	  select 
        um.*, 
        ur.id as user_role_id, 
        ur.name as user_role,
        um.status 
    from user_master as um  
    left join user_role as ur on ur.id = um.user_role_id 
    where BINARY um.username ='ruchit@gmail.com' or BINARY um.email_id ='ruchit@gmail.com'
a[c] ------> (
salt ----------------------------------> b.join('')wd37br6GzSpeBr7T(PEmrgCIgMmjjYL8
_updateTokenDetails sql ============> 	
 update user_master set  
                    access_token = "wd37br6GzSpeBr7T(PEmrgCIgMmjjYL8",
                    refresh_token = "5i9P1KM8kO3e3l3S*VIrBTX5ZUFXOkEi",
                    expire_time = "2020-02-18 11:22:15"
                    where id = 38
redis_obj stored
{ id: 38,
  secret_key: 'MzhfbnVsbF9udWxsXzY=',
  username: '',
  user_email: 'ruchit@gmail.com',
  access_token: 'wd37br6GzSpeBr7T(PEmrgCIgMmjjYL8',
  refresh_token: '5i9P1KM8kO3e3l3S*VIrBTX5ZUFXOkEi',
  expire_time: '2020-02-18 11:22:15',
  server_time: '2020-02-18 09:22:15',
  updated_at: '2020-02-18 09:22:15',
  user_group: undefined,
  user_group_id: undefined }
expire in =>  7140  seconds
expire in =>  7140  seconds
requested_plain_url ==>    /Application/getAdvertiserAppHitCount
required check ------------------------->  false
getAdvertiserAppHitCount sql 
  select 
                        am.id,
                        am.name,
                        am.icon,
                        am.banner,
                        am.package,
                        (select count(id) from application_hit_count where request_id = am.id) as total_count,
                        (select count(id) from application_hit_count where request_id = am.id and cast(create_date as date) = '2020-02-18') as today_count
                    from application_master as am
                    where am.user_id = '38' 
                    group by am.id
                    order by am.name asc
requested_plain_url ==>    /User/currentUser
required check ------------------------->  false
currentUser sql ------------->  select 
                    um.*,
                    2 as type,
                    null as parent_id,
                    ur.id as user_role_id,
                    ur.name as user_role
                from user_master as um 
                left join user_role as ur on ur.id = um.user_role_id
                where um.id = 38
requested_plain_url ==>    /User/wddUpq.jpeg
multimedia[(multimedia.length - 1)]jpeg
required check ------------------------->  false
requested_plain_url ==>    /UserRole/getUserRoleToRight
required check ------------------------->  false
Delete  SocketId:_rrXx0O_SEWMeN-hAAAA
requested_plain_url ==>    /User/wddUpq.jpeg
multimedia[(multimedia.length - 1)]jpeg
required check ------------------------->  false
Delete  SocketId:Pk8LsuwUE1wM-9n-AAAB
requested_plain_url ==>    /User/wddUpq.jpeg
multimedia[(multimedia.length - 1)]jpeg
required check ------------------------->  false
Delete  SocketId:DQHMvkqgQpEgYL2wAAAC
requested_plain_url ==>    /User/wddUpq.jpeg
multimedia[(multimedia.length - 1)]jpeg
required check ------------------------->  false
Delete  SocketId:NbIuEKS1mggcq_dEAAAD
